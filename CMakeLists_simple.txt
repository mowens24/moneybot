cmake_minimum_required(VERSION 3.16)
project(moneybot)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Force Apple Clang on macOS
if(APPLE)
    set(CMAKE_C_COMPILER /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang)
    set(CMAKE_CXX_COMPILER /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++)
    
    # Set macOS SDK
    execute_process(COMMAND xcrun --show-sdk-path --sdk macosx OUTPUT_VARIABLE CMAKE_OSX_SYSROOT OUTPUT_STRIP_TRAILING_WHITESPACE)
    message(STATUS "Setting macOS SDK sysroot: ${CMAKE_OSX_SYSROOT}")
endif()

# Find required packages
find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)

# Try to find nlohmann_json, but don't fail if not found
find_package(nlohmann_json QUIET)

# Include directories
include_directories(include)
include_directories(lib/imgui)
include_directories(lib/imgui/backends)

# ImGui source files
set(IMGUI_SOURCES
    lib/imgui/imgui.cpp
    lib/imgui/imgui_demo.cpp
    lib/imgui/imgui_draw.cpp
    lib/imgui/imgui_tables.cpp
    lib/imgui/imgui_widgets.cpp
    lib/imgui/backends/imgui_impl_glfw.cpp
    lib/imgui/backends/imgui_impl_opengl3.cpp
)

# Simple working executable
add_executable(moneybot_simple 
    src/gui_main_simple.cpp
    ${IMGUI_SOURCES}
)

# Link libraries
target_link_libraries(moneybot_simple
    glfw
    OpenGL::GL
    "-framework Cocoa"
    "-framework IOKit"
    "-framework CoreVideo"
)

# Compiler flags
target_compile_options(moneybot_simple PRIVATE
    -Wall
    -Wno-unused-parameter
    -Wno-missing-field-initializers
    -O2
)

# macOS specific settings
if(APPLE)
    target_compile_definitions(moneybot_simple PRIVATE GL_SILENCE_DEPRECATION)
endif()

# Create symlink for easy running
add_custom_target(create_symlink ALL
    COMMAND ${CMAKE_COMMAND} -E create_symlink 
    ${CMAKE_BINARY_DIR}/moneybot_simple 
    ${CMAKE_SOURCE_DIR}/run_moneybot_simple
    DEPENDS moneybot_simple
    COMMENT "Creating symlink for easy execution"
)
